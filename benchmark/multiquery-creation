#!/usr/bin/python

# Benchmark of Axiom query creation.  This does not measure the performance
# of queries, just of the API for creating an object which represents a
# query. Accepts two parameters, the number of item types for which to query
# and the number of attributes on each item type.  Reports one statistic,
# the number of seconds it takes to create a query object.

import sys

from axiom.store import Store
from axiom.attributes import integer
from axiom._bench import bench

import benchlib


def benchmark(numItemTypes, numAttributes, numLoops):
    store = Store()
    itemTypes = tuple([
        benchlib.itemTypeWithSomeAttributes([integer] * numAttributes)
        for i in range(numItemTypes)])

    bench(lambda: store.query(itemTypes), loops=numLoops)


def main(argv):
    if len(argv) != 4:
        raise SystemExit(
            "Usage: %s <number of types> <number of attributes> "
            "<number of loops>" % (argv[0],))
    benchmark(int(argv[1]), int(argv[2]), int(argv[3]))


if __name__ == '__main__':
    main(sys.argv)
