#!/usr/bin/python

# Benchmark of loading existing Items from an Axiom store.  Accepts one
# parameter, the number of attributes to place on the schema of the Item to
# create.  Reports one statistic, the number of seconds it takes to open a
# store.

import os
import sys
import tempfile

from axiom.store import Store
from axiom.attributes import integer
from axiom._bench import bench

import benchlib


def benchmark(numItemTypes, numAttributes, numLoops):
    dbpath = os.path.join(tempfile.mkdtemp(), 'store-opening.axiom')
    store = Store(dbpath)
    for i in range(numItemTypes):
        SomeItem = benchlib.itemTypeWithSomeAttributes([integer] * numAttributes)
        SomeItem(store=store)
    store.close()

    bench(lambda: Store(dbpath).close(), loops=numLoops)


def main(argv):
    if len(argv) != 4:
        raise SystemExit(
            "Usage: %s <number of item types> <number of attributes> "
            "<number of loops>" % (argv[0],))
    benchmark(int(argv[1]), int(argv[2]), int(argv[3]))


if __name__ == '__main__':
    main(sys.argv)
