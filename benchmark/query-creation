#!/usr/bin/python

# Benchmark of Axiom query creation.  This does not measure the performance
# of queries, just of the API for creating an object which represents a
# query. Accepts one parameter, the number of attributes on the item type
# for which the query will be.  Reports one statistic, the number of seconds
# it takes to create a query object.

import sys

from axiom.store import Store
from axiom.attributes import integer
from axiom._bench import bench

import benchlib


def benchmark(numAttributes, numLoops):
    store = Store()
    SomeItem = benchlib.itemTypeWithSomeAttributes([integer] * numAttributes)
    bench(lambda: store.query(SomeItem), loops=numLoops)


def main(argv):
    if len(argv) != 3:
        raise SystemExit(
            "Usage: %s <number of attributes> <number of loops>" % (argv[0],))
    benchmark(int(argv[1]), int(argv[2]))


if __name__ == '__main__':
    main(sys.argv)
