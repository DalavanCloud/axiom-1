#!/usr/bin/python

# Benchmark of Axiom new Item creation.  Accepts one parameter, the number
# of attributes to place on the schema of the Item to create.  Reports one
# statistic, the number of seconds it takes to create an Item of such a
# type.

import sys

from axiom.store import Store
from axiom.attributes import integer
from axiom._bench import bench

import benchlib



def benchmark(numAttributes, numLoops):
    SomeItem = benchlib.itemTypeWithSomeAttributes([integer] * numAttributes)
    values = dict.fromkeys((name for (name, attr) in SomeItem.getSchema()), 0)
    store = Store()

    bench(
        lambda: store.transact(
            benchlib.createSomeItems, store, SomeItem, values, xrange(1000)),
        extraFactor=1000,
        loops=numLoops)


def main(argv):
    if len(argv) != 3:
        raise SystemExit(
            "Usage: %s <number of attributes> <number of loops>" % (argv[0],))
    benchmark(int(argv[1]), int(argv[2]))


if __name__ == '__main__':
    main(sys.argv)
